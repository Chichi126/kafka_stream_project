services:
  # Zookeeper Service
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network

  # Kafka Service
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - app-network

  # Spark Master Service
  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no


    ports:
      - "8080:8080"
      - "7077:7077"
    networks:
      - app-network

  # Spark Worker Service
  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
    networks:
      - app-network


  # # MongoDb Services
  # mongodb:
  #   image: mongo:latest
  #   container_name: mongodb
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongo_data:/data/db
  #   networks:
  #     - app-network

  # Reddit Producer Service
  reddit-producer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: reddit-producer
    depends_on:
      - kafka
    env_file:
      - .env
    environment:
      - REDDIT_SUBREDDIT=politics
    volumes:
      - ./producer.py:/app/producer.py
    command: ["./wait-for-it.sh", "kafka:29092", "--", "python3", "producer.py"]
    networks:
      - app-network


  # spark-consumer:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: spark-consumer
  #   depends_on:
  #     - kafka
  #     - spark-master
  #   env_file:
  #     - .env
  #   environment:
  #     USE_SPARK: "true"
  #     SPARK_MASTER_HOST: spark-master
  #     SPARK_MASTER_PORT: 7077
  #     SPARK_EXTRA_CLASSPATH: /opt/spark/jars/spark-sql-kafka-0-10_2.12-3.4.1.jar:opt/spark/jars/mongo-spark-connector_2.12-10.4.1.jar 
  #     KAFKA_BOOTSTRAP_SERVERS: kafka:29092
  #     KAFKA_TOPIC: reddit_stream
  #     MONGO_USER: ${MONGO_USER}
  #     MONGO_PASSWORD: ${MONGO_PASSWORD}
  #     MONGODB_DATABASE: ${MONGODB_DATABASE}
  #     MONGODB_COLLECTION: ${MONGODB_COLLECTION}

  #   volumes:
  #     - ./consumer.py:/app/consumer.py
  #   command: ['./wait-for-it.sh', 'spark-master7077', "--", 'python3', consumer.py]

  #   networks:
  #     - app-network

  spark-consumer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spark-consumer
    depends_on:
      - kafka
      - spark-master
    env_file:
      - .env
    environment:
      USE_SPARK: "true"
      SPARK_MASTER_HOST: spark-master
      SPARK_MASTER_PORT: 7077
      SPARK_EXTRA_CLASSPATH: /opt/spark/jars/mongo-spark-connector_2.12-10.4.0.jar:/opt/spark/jars/mongo-spark-connector_2.12-10.4.1.jar
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_TOPIC: reddit
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGODB_DATABASE: ${MONGODB_DATABASE}
      MONGODB_COLLECTION: ${MONGODB_COLLECTION}
    volumes:
      - ./consumer.py:/app/consumer.py
    command: ["./wait-for-it.sh", "spark-master:7077", "--", "python3", "consumer.py"]
    networks:
      - app-network
  

networks:
  app-network:
    driver: bridge

volumes:
  mongo_data:
